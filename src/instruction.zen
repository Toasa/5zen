// RISC-V's opcode (represented by 7bits in RV32I)
// is not unique value for each instruction.
pub const Opcode = enum {
    Add,
    Addi,
    Jalr,
};

pub const InstructionSet = union(Opcode) {
    const Self = @This();

    Add: AddInst,
    Addi: AddiInst,
    Jalr: JalrInst,

    pub fn createAdd(operand: Operand) Self {
        return Self{ .Add = AddInst.init(operand) };
    }

    pub fn createAddi(operand: Operand) Self {
        return Self{ .Addi = AddiInst.init(operand) };
    }

    pub fn createJalr(operand: Operand) Self {
        return Self{ .Jalr = JalrInst.init(operand) };
    }

    pub const AddInst = struct {
        pub const opcode: u7 = 0b0110011;
        const T: Type = T.R;
        operand: Operand,
        
        fn init(operand: Operand) @This() {
            return @This() { .operand = operand };
        }
    };

    pub const AddiInst = struct {
        pub const opcode: u7 = 0b0010011;
        const T: Type = T.I;
        operand: Operand,
        
        fn init(operand: Operand) @This() {
            return @This(){ .operand = operand };
        }
    };

    pub const JalrInst = struct {
        pub const opcode: u7 = 0b1100111;
        const T: Type = T.I;
        operand: Operand,
        
        fn init(operand: Operand) @This() {
            return @This(){ .operand = operand };
        }
    };
};

const Type = enum {
    R,
    I,
};

pub const Operand = union(Type) {
    R: RType,
    I: IType,

    pub const RType = struct {
        rs1: u5,
        rs2: u5,
        rd: u5,
        func3: u3,
        func7: u7,

        pub fn init(rs1: u5, rs2: u5, rd: u5, func3: u3, func7: u7) @This() {
            return @This() {
                .rs1 = rs1,
                .rs2 = rs2,
                .rd = rd,
                .func3 = func3,
                .func7 = func7,
            };
        }
    };

    pub const IType = struct {
        rs1: u5,
        rd: u5,
        imm: u12,
        func3: u3,

        pub fn init(rs1: u5, rd: u5, imm: u12, func3: u3) @This() {
            return @This() {
                .rs1 = rs1,
                .rd = rd,
                .imm = imm,
                .func3 = func3,
            };
        }
    };
};